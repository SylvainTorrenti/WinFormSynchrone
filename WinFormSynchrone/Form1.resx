<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAJdLAACXSwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwECBQMAAAAAAAAAAAAA
        AAYAAAAkAAAAPAAAAEEAAAA0AAAAFgEBAgAAAAAAAgYQAAAAAAMAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQMBAgMBAAAAAAAB
        ATkAAACZAgQL2QYPKfcIFjz/CRc//wcSMf4DCBTuAAAAxgAAAHoAAQIdAAAAAAAAAAIAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAEAAAAAAAB
        AioAAAC7CBU4/xU2kf4dTc//Ilnu/yRf/P8lYP/+JF34/yBT3/8YQKz+DSJb/wIFDvcAAACNBAoZDQEC
        BAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADBw0AAAAAAwAA
        AAAAAABkBAsd+Rc8of8jXfn8J2b/+yln//0mYf7+IVnx/x5V5/8gWPD/JmL+/ipq/vwoZ//7HlDY/Qse
        UP8AAADaAQMILwAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAAAAAAAAeQgWPP8gVeT8JmT//Cdj/v8YSMz/BCJ2/wITQv8LFTH/EBkt/wsVLv8CETr/Ahxn/xZD
        wP8oZf7+JmX/+xQ2k/8BAgXyAAECOwAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAAAAAAAGIJFz7/Ilv0+ydj//4fU9//ABZV/xsfJP9kamP/m6il/7fHyP+/0NP/uMnK/56r
        qf9mbWb/GRob/wARR/8hVeD/KGj/+xc9o/8AAQHqAQIHIwAAAAABAgUCAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAEDAgAAAAAAAAAtBQ0j9SBU4v8nZf/+FkK6/wUJGf9tdG3/zuPq/+L6///d9P3/2O74/9ft
        9v/Y7vj/3fP9/+L6///O4+3/XmRd/wAEFf8eT9P/J2f/+xIvf/8AAAC6AAAAAAIFDgEBAgYAAAAAAAAA
        AAAAAAAAAAAAAAEDBwAIFTkBAAAAAAAAALYYP6j/KGj//BZAtv8PDxH/pLOz/+X9///T6PH/zuPr/9Dk
        7P/R5e3/0ebu/9Hm7f/Q5Oz/zuPq/9Po8P/n////eIF9/wAJIv8jWu7/JF/++wgUN/8AAABWAAAAAAAB
        AgMAAAAAAAAAAAAAAAAAAAAAAAECAwAAAAAAAABBCxxL/yZj//0eUdv/CQ4b/6i4uP/i+v//zeHp/9Hm
        7v/S5+//0ufv/9Ln7//S5+//0ufv/9Ln7//S5+//0ebu/87i6v/k/P//UFVO/wUfaP8paf/8Fz2j/wAA
        AMEAAAAACBY7AQAAAAAAAAAAAAAAAAAAAAADBxMDAAAAAAAAAJ8YPqb/KWj/+wIVTP98hX//5Pz//83h
        6f/S5+//0ufv/9Ln7//S5+//0OXt/8/k7P/S5+//0ufv/9Ln7//S5+//0OXt/9jt9v+7zNH/CxEg/x5T
        4v4jW/P/BQ0j/AAAACoAAAAAAAAAAgAAAAAAAAAAAAAAAQAAAAAAAAAKBQwh4SNb8P8VRcf9KS4y/9br
        8//R5u7/0ufv/9Ln7//S5+//0ufv/9Dl7f/c8fn/4fb+/9Ln7//R5u7/0ufv/9Ln7//S5+//z+Ts/970
        /v8+Qj7/CzCW/ypq//sNIVj/AAAAYgAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAC8LHEv/Kmn//wMg
        cP9ze3b/4vn//87j6//S5+//0ebu/9Dk7P/O4ur/2u/4/6O3vf+LnqT/1Onx/9Tp8v/R5u7/0ufv/9Ln
        7//P4+v/4vn//2pxa/8BGmL/K2z/+xIwgf8AAACNAAAAAAAAAQRKKywASSssAAMCAgQAAAAAAAAATQ8o
        a/8oaP/8BRdG/6Sxrv/c8v3/0OXt/9Ln7//W6/T/3vT7/+7///+brbP/GQwN/yAMDP9NVln/2vD4/9Dl
        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
        AK9AKAJfIBSCvyAQQv9AEpn/pBaC/9Ir5/8=
</value>
  </data>
</root>